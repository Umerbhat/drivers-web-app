{
    "sourceFile": "src/features/deliveryTracker/pages/DeliveryDetails.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1642943735331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642944391953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { Loader } from \"../../../components/Loader\";\n import { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\n import { InfoCard } from \"../components/InfoCard\";\n import { ItemActions } from \"../components/ItemActions\";\n-import { getDeliveryDetails, setDeliveryStatus } from \"../state/actions\";\n+import { getDeliveryDetails, setDeliveryStatus } from \"../state/preliminaryActions\";\n import { setActiveDelivery } from \"../state/slice\";\n import {\n   getDeliveryListData,\n   getActiveDeliveryId,\n"
                },
                {
                    "date": 1642944621438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { Loader } from \"../../../components/Loader\";\n import { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\n import { InfoCard } from \"../components/InfoCard\";\n import { ItemActions } from \"../components/ItemActions\";\n-import { getDeliveryDetails, setDeliveryStatus } from \"../state/preliminaryActions\";\n+import { getDeliveryDetails, setDeliveryStatus } from \"../state/asyncActions\";\n import { setActiveDelivery } from \"../state/slice\";\n import {\n   getDeliveryListData,\n   getActiveDeliveryId,\n"
                },
                {
                    "date": 1642945697883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,15 @@\n import {\n   getDeliveryListData,\n   getActiveDeliveryId,\n   getDeliveryApiStatus,\n+  getMarkDeliveryApiStatus,\n } from \"../state/selectors\";\n \n export function DeliveryDetails() {\n   const { entities } = useAppSelector(getDeliveryListData);\n   const status = useAppSelector(getDeliveryApiStatus);\n+  const markApiStatus = useAppSelector(getMarkDeliveryApiStatus)\n   const activeDeliveryId = useAppSelector(getActiveDeliveryId);\n   const { deliveryId } = useParams();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n@@ -29,9 +31,9 @@\n     : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n   return (\n     <div>\n-      {status === \"loading\" && <Loader />}\n+      {(status === \"loading\" || markApiStatus ==='loading') && <Loader />}\n       {details && deliveryId ? (\n         <ItemActions\n           isActive={isActiveDelivery}\n           activeDeliveryId={activeDeliveryId}\n"
                },
                {
                    "date": 1642945735300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \n export function DeliveryDetails() {\n   const { entities } = useAppSelector(getDeliveryListData);\n   const status = useAppSelector(getDeliveryApiStatus);\n-  const markApiStatus = useAppSelector(getMarkDeliveryApiStatus)\n+  const markApiStatus = useAppSelector(getMarkDeliveryApiStatus);\n   const activeDeliveryId = useAppSelector(getActiveDeliveryId);\n   const { deliveryId } = useParams();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n@@ -31,9 +31,9 @@\n     : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n   return (\n     <div>\n-      {(status === \"loading\" || markApiStatus ==='loading') && <Loader />}\n+      {(status === \"loading\" || markApiStatus === \"loading\") && <Loader />}\n       {details && deliveryId ? (\n         <ItemActions\n           isActive={isActiveDelivery}\n           activeDeliveryId={activeDeliveryId}\n"
                },
                {
                    "date": 1642945777583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,12 @@\n   const details = deliveryId\n     ? (entities[deliveryId] as TDeliveryItemDetails)\n     : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n+  const isLoading = (status === \"loading\" || markApiStatus === \"loading\")\n   return (\n     <div>\n-      {(status === \"loading\" || markApiStatus === \"loading\") && <Loader />}\n+      {isLoading && <Loader />}\n       {details && deliveryId ? (\n         <ItemActions\n           isActive={isActiveDelivery}\n           activeDeliveryId={activeDeliveryId}\n"
                },
                {
                    "date": 1642945834574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,14 @@\n   const details = deliveryId\n     ? (entities[deliveryId] as TDeliveryItemDetails)\n     : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n-  const isLoading = (status === \"loading\" || markApiStatus === \"loading\")\n+  const isApiLoading = status === \"loading\" || markApiStatus === \"loading\";\n+  const isApiError = status === \"failed\" || markApiStatus === \"failed\";\n   return (\n     <div>\n-      {isLoading && <Loader />}\n+      {isApiLoading && <Loader />}\n+      {isApiError && \"Something went wrong...\"}\n       {details && deliveryId ? (\n         <ItemActions\n           isActive={isActiveDelivery}\n           activeDeliveryId={activeDeliveryId}\n"
                },
                {
                    "date": 1642946036855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect } from \"react\";\n-import { Link, useParams } from \"react-router-dom\";\n+import { useParams } from \"react-router-dom\";\n import { TDeliveryItemDetails, TPostStatusParams } from \"../../../api/types\";\n import { Loader } from \"../../../components/Loader\";\n import { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\n import { InfoCard } from \"../components/InfoCard\";\n"
                },
                {
                    "date": 1642946105101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,27 +35,29 @@\n   return (\n     <div>\n       {isApiLoading && <Loader />}\n       {isApiError && \"Something went wrong...\"}\n-      {details && deliveryId ? (\n-        <ItemActions\n-          isActive={isActiveDelivery}\n-          activeDeliveryId={activeDeliveryId}\n-          makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n-          markStatus={(status: TPostStatusParams[\"status\"]) =>\n-            dispatch(\n-              setDeliveryStatus({\n-                deliveryId,\n-                status,\n-                latitude: details.latitude,\n-                longitude: details.longitude,\n-              })\n-            )\n-          }\n-        />\n-      ) : null}\n-      {details ? (\n-        <InfoCard details={details} isActive={isActiveDelivery} />\n-      ) : null}\n+      <div>\n+        {details && deliveryId ? (\n+          <ItemActions\n+            isActive={isActiveDelivery}\n+            activeDeliveryId={activeDeliveryId}\n+            makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n+            markStatus={(status: TPostStatusParams[\"status\"]) =>\n+              dispatch(\n+                setDeliveryStatus({\n+                  deliveryId,\n+                  status,\n+                  latitude: details.latitude,\n+                  longitude: details.longitude,\n+                })\n+              )\n+            }\n+          />\n+        ) : null}\n+        {details ? (\n+          <InfoCard details={details} isActive={isActiveDelivery} />\n+        ) : null}\n+      </div>\n     </div>\n   );\n }\n"
                },
                {
                    "date": 1642946240467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n } from \"../state/selectors\";\n \n export function DeliveryDetails() {\n   const { entities } = useAppSelector(getDeliveryListData);\n-  const status = useAppSelector(getDeliveryApiStatus);\n+  const apiStatus = useAppSelector(getDeliveryApiStatus);\n   const markApiStatus = useAppSelector(getMarkDeliveryApiStatus);\n   const activeDeliveryId = useAppSelector(getActiveDeliveryId);\n   const { deliveryId } = useParams();\n   const dispatch = useAppDispatch();\n@@ -29,10 +29,10 @@\n   const details = deliveryId\n     ? (entities[deliveryId] as TDeliveryItemDetails)\n     : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n-  const isApiLoading = status === \"loading\" || markApiStatus === \"loading\";\n-  const isApiError = status === \"failed\" || markApiStatus === \"failed\";\n+  const isApiLoading = apiStatus === \"loading\" || markApiStatus === \"loading\";\n+  const isApiError = apiStatus === \"failed\" || markApiStatus === \"failed\";\n   return (\n     <div>\n       {isApiLoading && <Loader />}\n       {isApiError && \"Something went wrong...\"}\n"
                },
                {
                    "date": 1642947068375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,27 +6,27 @@\n import { InfoCard } from \"../components/InfoCard\";\n import { ItemActions } from \"../components/ItemActions\";\n import { getDeliveryDetails, setDeliveryStatus } from \"../state/asyncActions\";\n import { setActiveDelivery } from \"../state/slice\";\n-import {\n-  getDeliveryListData,\n-  getActiveDeliveryId,\n-  getDeliveryApiStatus,\n-  getMarkDeliveryApiStatus,\n-} from \"../state/selectors\";\n+import { getDeliveryDetailsData } from \"../state/selectors\";\n \n export function DeliveryDetails() {\n-  const { entities } = useAppSelector(getDeliveryListData);\n-  const apiStatus = useAppSelector(getDeliveryApiStatus);\n-  const markApiStatus = useAppSelector(getMarkDeliveryApiStatus);\n-  const activeDeliveryId = useAppSelector(getActiveDeliveryId);\n+  const {\n+    deliveryListData,\n+    deliveryApiStatus: apiStatus,\n+    markDeliveryApiStatus: markApiStatus,\n+    activeDeliveryId,\n+  } = useAppSelector(getDeliveryDetailsData);\n+  const { entities } = deliveryListData;\n   const { deliveryId } = useParams();\n   const dispatch = useAppDispatch();\n+\n   useEffect(() => {\n     if (deliveryId) {\n       dispatch(getDeliveryDetails(deliveryId));\n     }\n   }, [deliveryId, dispatch]);\n+  \n   const details = deliveryId\n     ? (entities[deliveryId] as TDeliveryItemDetails)\n     : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n"
                },
                {
                    "date": 1642947220024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,13 @@\n     if (deliveryId) {\n       dispatch(getDeliveryDetails(deliveryId));\n     }\n   }, [deliveryId, dispatch]);\n-  \n+\n   const details = deliveryId\n     ? (entities[deliveryId] as TDeliveryItemDetails)\n     : null;\n+\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n   const isApiLoading = apiStatus === \"loading\" || markApiStatus === \"loading\";\n   const isApiError = apiStatus === \"failed\" || markApiStatus === \"failed\";\n   return (\n"
                },
                {
                    "date": 1642947369615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect } from \"react\";\n+import React, { useCallback, useEffect } from \"react\";\n import { useParams } from \"react-router-dom\";\n import { TDeliveryItemDetails, TPostStatusParams } from \"../../../api/types\";\n import { Loader } from \"../../../components/Loader\";\n import { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\n@@ -18,22 +18,34 @@\n   } = useAppSelector(getDeliveryDetailsData);\n   const { entities } = deliveryListData;\n   const { deliveryId } = useParams();\n   const dispatch = useAppDispatch();\n+  const details = deliveryId\n+  ? (entities[deliveryId] as TDeliveryItemDetails)\n+  : null;\n+  const isActiveDelivery = activeDeliveryId === deliveryId;\n+  const isApiLoading = apiStatus === \"loading\" || markApiStatus === \"loading\";\n+  const isApiError = apiStatus === \"failed\" || markApiStatus === \"failed\";\n \n   useEffect(() => {\n     if (deliveryId) {\n       dispatch(getDeliveryDetails(deliveryId));\n     }\n   }, [deliveryId, dispatch]);\n \n-  const details = deliveryId\n-    ? (entities[deliveryId] as TDeliveryItemDetails)\n-    : null;\n \n-  const isActiveDelivery = activeDeliveryId === deliveryId;\n-  const isApiLoading = apiStatus === \"loading\" || markApiStatus === \"loading\";\n-  const isApiError = apiStatus === \"failed\" || markApiStatus === \"failed\";\n+\n+  const handleMarkStatus = useCallback((status: TPostStatusParams[\"status\"]) =>\n+    dispatch(\n+      setDeliveryStatus({\n+        deliveryId,\n+        status,\n+        latitude: details.latitude,\n+        longitude: details.longitude,\n+      })\n+    ),[])\n+\n+  \n   return (\n     <div>\n       {isApiLoading && <Loader />}\n       {isApiError && \"Something went wrong...\"}\n@@ -42,18 +54,10 @@\n           <ItemActions\n             isActive={isActiveDelivery}\n             activeDeliveryId={activeDeliveryId}\n             makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n-            markStatus={(status: TPostStatusParams[\"status\"]) =>\n-              dispatch(\n-                setDeliveryStatus({\n-                  deliveryId,\n-                  status,\n-                  latitude: details.latitude,\n-                  longitude: details.longitude,\n-                })\n-              )\n-            }\n+            markStatus={handleMarkStatus}\n+            \n           />\n         ) : null}\n         {details ? (\n           <InfoCard details={details} isActive={isActiveDelivery} />\n"
                },
                {
                    "date": 1642947427852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n   const { entities } = deliveryListData;\n   const { deliveryId } = useParams();\n   const dispatch = useAppDispatch();\n   const details = deliveryId\n-  ? (entities[deliveryId] as TDeliveryItemDetails)\n-  : null;\n+    ? (entities[deliveryId] as TDeliveryItemDetails)\n+    : null;\n   const isActiveDelivery = activeDeliveryId === deliveryId;\n   const isApiLoading = apiStatus === \"loading\" || markApiStatus === \"loading\";\n   const isApiError = apiStatus === \"failed\" || markApiStatus === \"failed\";\n \n@@ -31,21 +31,24 @@\n       dispatch(getDeliveryDetails(deliveryId));\n     }\n   }, [deliveryId, dispatch]);\n \n+  const handleMarkStatus = useCallback(\n+    (status: TPostStatusParams[\"status\"]) => {\n+      if (deliveryId && details) {\n+        dispatch(\n+          setDeliveryStatus({\n+            deliveryId,\n+            status,\n+            latitude: details.latitude,\n+            longitude: details.longitude,\n+          })\n+        );\n+      }\n+    },\n+    [deliveryId, details, dispatch]\n+  );\n \n-\n-  const handleMarkStatus = useCallback((status: TPostStatusParams[\"status\"]) =>\n-    dispatch(\n-      setDeliveryStatus({\n-        deliveryId,\n-        status,\n-        latitude: details.latitude,\n-        longitude: details.longitude,\n-      })\n-    ),[])\n-\n-  \n   return (\n     <div>\n       {isApiLoading && <Loader />}\n       {isApiError && \"Something went wrong...\"}\n@@ -55,9 +58,8 @@\n             isActive={isActiveDelivery}\n             activeDeliveryId={activeDeliveryId}\n             makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n             markStatus={handleMarkStatus}\n-            \n           />\n         ) : null}\n         {details ? (\n           <InfoCard details={details} isActive={isActiveDelivery} />\n"
                },
                {
                    "date": 1642947456629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       dispatch(getDeliveryDetails(deliveryId));\n     }\n   }, [deliveryId, dispatch]);\n \n-  const handleMarkStatus = useCallback(\n+  const handleMarkDeliveryStatus = useCallback(\n     (status: TPostStatusParams[\"status\"]) => {\n       if (deliveryId && details) {\n         dispatch(\n           setDeliveryStatus({\n@@ -57,9 +57,9 @@\n           <ItemActions\n             isActive={isActiveDelivery}\n             activeDeliveryId={activeDeliveryId}\n             makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n-            markStatus={handleMarkStatus}\n+            markStatus={handleMarkDeliveryStatus}\n           />\n         ) : null}\n         {details ? (\n           <InfoCard details={details} isActive={isActiveDelivery} />\n"
                },
                {
                    "date": 1642947622135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,10 +56,10 @@\n         {details && deliveryId ? (\n           <ItemActions\n             isActive={isActiveDelivery}\n             activeDeliveryId={activeDeliveryId}\n-            makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n-            markStatus={handleMarkDeliveryStatus}\n+            onMakeDeliveryActive={() => dispatch(setActiveDelivery(deliveryId))}\n+            onMarkDeliveryStatus={handleMarkDeliveryStatus}\n           />\n         ) : null}\n         {details ? (\n           <InfoCard details={details} isActive={isActiveDelivery} />\n"
                },
                {
                    "date": 1642947651881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n       {isApiError && \"Something went wrong...\"}\n       <div>\n         {details && deliveryId ? (\n           <ItemActions\n-            isActive={isActiveDelivery}\n+           isActiveDelivery={isActiveDelivery}\n             activeDeliveryId={activeDeliveryId}\n             onMakeDeliveryActive={() => dispatch(setActiveDelivery(deliveryId))}\n             onMarkDeliveryStatus={handleMarkDeliveryStatus}\n           />\n"
                },
                {
                    "date": 1642947729691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,20 +51,18 @@\n   return (\n     <div>\n       {isApiLoading && <Loader />}\n       {isApiError && \"Something went wrong...\"}\n-      <div>\n-        {details && deliveryId ? (\n+      {details && deliveryId ? (\n+        <div>\n           <ItemActions\n-           isActiveDelivery={isActiveDelivery}\n+            isActiveDelivery={isActiveDelivery}\n             activeDeliveryId={activeDeliveryId}\n             onMakeDeliveryActive={() => dispatch(setActiveDelivery(deliveryId))}\n             onMarkDeliveryStatus={handleMarkDeliveryStatus}\n           />\n-        ) : null}\n-        {details ? (\n           <InfoCard details={details} isActive={isActiveDelivery} />\n-        ) : null}\n-      </div>\n+        </div>\n+      ) : null}\n     </div>\n   );\n }\n"
                }
            ],
            "date": 1642943735331,
            "name": "Commit-0",
            "content": "import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TDeliveryItemDetails, TPostStatusParams } from \"../../../api/types\";\nimport { Loader } from \"../../../components/Loader\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\nimport { InfoCard } from \"../components/InfoCard\";\nimport { ItemActions } from \"../components/ItemActions\";\nimport { getDeliveryDetails, setDeliveryStatus } from \"../state/actions\";\nimport { setActiveDelivery } from \"../state/slice\";\nimport {\n  getDeliveryListData,\n  getActiveDeliveryId,\n  getDeliveryApiStatus,\n} from \"../state/selectors\";\n\nexport function DeliveryDetails() {\n  const { entities } = useAppSelector(getDeliveryListData);\n  const status = useAppSelector(getDeliveryApiStatus);\n  const activeDeliveryId = useAppSelector(getActiveDeliveryId);\n  const { deliveryId } = useParams();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (deliveryId) {\n      dispatch(getDeliveryDetails(deliveryId));\n    }\n  }, [deliveryId, dispatch]);\n  const details = deliveryId\n    ? (entities[deliveryId] as TDeliveryItemDetails)\n    : null;\n  const isActiveDelivery = activeDeliveryId === deliveryId;\n  return (\n    <div>\n      {status === \"loading\" && <Loader />}\n      {details && deliveryId ? (\n        <ItemActions\n          isActive={isActiveDelivery}\n          activeDeliveryId={activeDeliveryId}\n          makeActive={() => dispatch(setActiveDelivery(deliveryId))}\n          markStatus={(status: TPostStatusParams[\"status\"]) =>\n            dispatch(\n              setDeliveryStatus({\n                deliveryId,\n                status,\n                latitude: details.latitude,\n                longitude: details.longitude,\n              })\n            )\n          }\n        />\n      ) : null}\n      {details ? (\n        <InfoCard details={details} isActive={isActiveDelivery} />\n      ) : null}\n    </div>\n  );\n}\n"
        }
    ]
}